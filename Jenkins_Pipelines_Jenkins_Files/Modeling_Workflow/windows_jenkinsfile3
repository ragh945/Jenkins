pipeline {
    agent any
    environment {
        RELEASE = '20.04'
    }
    stages {
        stage('Build') {
            environment {
                LOG_LEVEL = 'INFO'
            }
            parallel {
                stage('linux-arm64') {
                    agent any
                    steps {
                        echo "Building release %RELEASE% for linux-arm64 with log level %LOG_LEVEL%..."
                        bat '''
                            echo Building release %RELEASE% for linux-arm64 with log level %LOG_LEVEL%...
                            timeout /t 10 /nobreak >nul
                        '''
                    }
                }
                stage('linux-amd64') {
                    agent any
                    steps {
                        echo "Building release %RELEASE% for linux-amd64 with log level %LOG_LEVEL%..."
                        bat '''
                            echo Building release %RELEASE% for linux-amd64 with log level %LOG_LEVEL%...
                            timeout /t 20 /nobreak >nul
                        '''
                    }
                }
                stage('windows-amd64') {
                    agent any
                    steps {
                        echo "Building release %RELEASE% for windows-amd64 with log level %LOG_LEVEL%..."
                        bat '''
                            echo Building release %RELEASE% for windows-amd64 with log level %LOG_LEVEL%...
                            timeout /t 30 /nobreak >nul
                        '''
                    }
                }
            }
        }

        stage('Test') {
            steps {
                echo "Testing release %RELEASE%..."
                bat 'echo Running Tests...'
            }
        }

        stage('Deploy') {
            input {
                message 'Deploy?'
                ok 'Do it!'
                parameters {
                    string(name: 'TARGET_ENVIRONMENT', defaultValue: 'PROD', description: 'Target deployment environment')
                }
            }
            steps {
                bat '''
                    echo Deploying release %RELEASE% to environment %TARGET_ENVIRONMENT%
                '''
            }
        }
    }

    post {
        always {
            echo 'Prints whether deploy happened or not, success or failure'
        }
    }
}
